import mido
import thespian.actors
import time



class Input(thespian.actors.Actor):

    # XXX move to __init__
    subscribers = []

    def open(self, port='Launchpad MK2 MIDI 1'):
        self._port = mido.open_input('Launchpad MK2 MIDI 1')


    def next(self):
        # XXX Why doesn't next(self._port) work?
        for midi_message in self._port:
            for subscriber in self.subscribers:
                self.send(subscriber, midi_message)
            break

        
    def receiveMessage(self, message, sender):
        if isinstance(message, tuple):
            match ('subscribe', subscriber) = message
            self.subscribers.append(subscriber)
        elif message == 'open':
            self.open()
        elif message == 'next':
            self.next()


class MessagePrinter(thespian.actors.Actor):

    def receiveMessage(self, message, sender):
        print(message)


def run(systembase=None):
    system = thespian.actors.ActorSystem(systembase)
    input_actor = system.createActor(Input)
    print_actor = system.createActor(MessagePrinter)

    system.tell(input_actor, 'open')
    system.tell(input_actor, ('subscribe', print_actor))
    for _ in range(5):
        system.tell(input_actor, 'next')
        time.sleep(0.001)
    system.shutdown()


if __name__ == '__main__':
    run()
